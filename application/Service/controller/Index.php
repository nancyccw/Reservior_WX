<?php
namespace app\Service\controller;
vendor('topthink.think-image.src.Image');

use app\Common\controller\CommonController;
use app\Common\controller\WeiXinAdvanced;
use app\Common\controller\WeiXinBase;
use app\home\model\readwater;
use app\home\model\readztcs;
use app\home\model\readRainfall;
use app\home\model\ReserviorDamModel;
use app\Service\model\inform;
use app\Service\model\user;
use app\Service\model\warning;
use think\Cache;
use think\Image;

class Index extends CommonController
{


    public function index()
    {
        header('Content-ype:text/xml;charset=utf-8');
        $weiXinBase = new WeiXinBase();
        if (!isset($_GET['echostr'])) {
            $weiXinBase->responseMsg();
        } else {
            $weiXinBase->qyValid();
        }
    }
    var $appID = "";
    var $appsecret = "";
    var $root = "";
    var $weiXinAdvanced = "";
    var $Agentld = "";


    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->appID = config('appID');
        $this->appsecret = config('appsecret');
        $this->root = config('root');
        $this->Agentld = config('Agentld');
        $this->weiXinAdvanced = new WeiXinAdvanced($this->appID, $this->appsecret);
        $this->init();

    }

    public function init()
    {
        $data = '{
                "button":[
                  {
                        "name":"水库工情",
                        "sub_button":[
                        {
                            "type":"view",
                            "name":"降雨信息",
                            "url": "'.$this->root.'/public/index.php/home/index/getRainfall"
                        },
                        {
                            "type":"view",
                            "name":"水库水位",
                            "url": "'.$this->root.'/public/index.php/home/index/getReservoirWater"
                        },
                        {
                            "type":"view",
                            "name":"大坝监测",
                            "url": "'.$this->root.'/public/index.php/home/index/getDamSaturationLine"
                        },
                         {
                            "type":"view",
                            "name":"闸门工情",
                            "url": "'.$this->root.'/public/index.php/home/index/getSluiceGateStatus"
                        }
                        ]
					},
				     {
				         "name":"气象信息",
				         "sub_button":[
				           {
				             "type":"view",
				             "name":"东莞天气",
				             "url": "http://www.dg121.com/index.php"
				          },
						   {
				             "type":"view",
				             "name":"台风路径",
				             "url": "http://www.dg121.com/portal/typhoon/typhoon8.html"
				          }]
				     }]
				}';
        $response = $this->weiXinAdvanced->create_menu($data);
//        echo $response['errmsg'];
    }



    /*
     * 根据时间查询水位趋势图
     */
    public function chartData()
    {
        $startTime = $_GET['startTime'];//起始时间
        $endTime = $_GET['endTime'];//结束时间
        $readwater = new readwater();
        $bz_name = $_GET['bz_name'];//泵站名称
        //获取sql字符串
        $result = $this->jointSQL($bz_name);
        //查询数据
        $readWaterList = $readwater->query(sprintf($result['query'],$startTime,$endTime));

        $data = array();
        //遍历取数据
        foreach ($readWaterList as $item) {
            $count = count($item);
            $newItem = array();
            $newItem['bz_type'] = $result['bz_type'];
            if($count == 2){
                $newItem["TIME"] = sprintf("%s %s:%s:00", substr($item["timestamp"], 0, 10), substr($item["timestamp"], 11, 2), substr($item["timestamp"], 14, 2));
                $newItem["NJSW"] = round(floatval($item['NJSW']),2);//外江水位
            }else{
                $newItem["TIME"] = sprintf("%s %s:%s:00", substr($item["timestamp"], 0, 10), substr($item["timestamp"], 11, 2), substr($item["timestamp"], 14, 2));
                $newItem["WJSW"] = round(floatval($item['WJSW']),2);//外江水位
                $newItem["NJSW"] = round(floatval($item['NJSW']),2);//内江水位
            }
//            else{
//                $newItem["TIME"] = sprintf("%s %s:%s:00", substr($item["timestamp"], 0, 10), substr($item["timestamp"], 11, 2), substr($item["timestamp"], 14, 2));
//                $newItem["WJSW"] = round(floatval($item['WJSW']),2);//外江水位
//                $newItem["NJSW"] = round(floatval($item['NJSW']),2);//内江水位
//                $newItem["QCSW"] = round(floatval($item['QCSW']),2);//前池水位
//            }
            $data[] = $newItem;
        }
        return json_encode($data);
    }

    /*
     * 根据时间查询雨量趋势图
     */
    public  function getRfChartData(){
        $startTime = $_GET['startTime'];//起始时间
        $endTime = $_GET['endTime'];//结束时间

        $readRainfall = new readRainfall();
        $data = array();
        //原生查询
        //查询时间间隔<48小时，取整点数据，最多48条
        //如果查询时间间隔>48小时，但<30*24小时，取每日8点的数据
        //如果查询时间间隔>60day，取每月的平均值

        //每月雨量，单日的7:55累计雨量
        $tmFrom = new \DateTime($startTime);
        $tmTo = new \DateTime($endTime);
        $diff = $tmFrom->diff($tmTo)->days;
        $query = '';

        //echo date("Y",strtotime($startTime)),PHP_EOL;
        if ( $diff<= 1){
//            $query = "SELECT CONVERT(varchar(19),TM,120) as TM,DRP,INTV FROM ST_PPTN_R where TM >='%s' and  TM <='%s' and  datepart(mi,TM) = 0 and datepart(ss,TM) = 0 and STCD = '00000036' order by TM asc";
            $query = "SELECT CONVERT(varchar(19),DT,120) as TM,RYL as DRP FROM WATER where DT >='%s' and  DT <='%s' and  datepart(mi,DT) = 0 order by DT asc";
            $readRainfallList = $readRainfall->query(sprintf($query,$startTime,$endTime));
        }
        elseif ($diff<=2){
//            $query = "SELECT CONVERT(varchar(19),TM,120) as TM,DRP,INTV FROM ST_PPTN_R where TM >='%s' and  TM <='%s'
//                        and  datepart(mi,TM) = 0 and datepart(ss,TM) = 0 and STCD = '00000036'
//                        AND (DATEDIFF(hh,'%s',TM))%2 = 0  order by TM asc";
            $query = "SELECT CONVERT(varchar(19),DT,120) as TM,RYL as DRP FROM WATER where DT >='%s' and  DT <='%s'
                        and  datepart(mi,DT) = 0 and (DATEDIFF(hh,'%s',DT))%2 = 0  order by DT asc";
            $readRainfallList = $readRainfall->query(sprintf($query,$startTime,$endTime,$startTime));
        }
        elseif ($diff <= 60){
//            $query = "SELECT DATENAME(DAY,TM) as TM,SUM(DRP) as DRP FROM ST_PPTN_R where TM >='%s' and  TM <='%s' and  datepart(hh,TM) = '07' and datepart(mi,TM) = '55'
//                        and STCD = '00000036' GROUP BY DATENAME(DAY,TM) order by cast(DATENAME(DAY,TM) as  int) asc";
            $query = "SELECT DATENAME(DAY,DT) as TM,SUM(RYL) as DRP FROM WATER where DT >='%s' and  DT <='%s' and  datepart(hh,DT) = '07' and datepart(mi,DT) = '55' 
                        GROUP BY DATENAME(DAY,DT) order by cast(DATENAME(DAY,DT) as  int) asc";
            $readRainfallList = $readRainfall->query(sprintf($query,$startTime,$endTime));
        }
        else {
            $timestamp = strtotime($startTime);
            $year = date('Y',$timestamp);
//            $query = "SELECT MONTH(TM) as TM,AVG(DRP) AS DRP FROM ST_PPTN_R where YEAR(TM)= $year  and STCD = '00000036' GROUP BY MONTH(TM) ORDER  BY MONTH(TM) asc";
            $query = "SELECT MONTH(DT) as TM,AVG(RYL) AS DRP FROM WATER where YEAR(DT)= $year GROUP BY MONTH(DT) ORDER  BY MONTH(DT) asc";
            $readRainfallList = $readRainfall->query(sprintf($query,$startTime,$endTime));
        }
//        echo $query;

//        $readRainfallList = $readRainfall->query(sprintf($query,$startTime,$endTime));

        //遍历取数据
        foreach ($readRainfallList as $item) {

            $newItem = array();
            if ( $diff<= 2){
                $newItem["TIME"] = sprintf("%s %s:%s:00", substr($item["TM"], 0, 10), substr($item["TM"], 11, 2), substr($item["TM"], 14, 2));
            }
            else{
                $newItem["TIME"] = $item["TM"];
            }
            $newItem["DRP"] = round(floatval($item['DRP']),2);//实时雨量
            $data[] = $newItem;
        }
//        echo $data;
        return json_encode($data);
    }
    public function getAccumRainfall()
    {
        $readRainfall = new readRainfall();
        $accumRainfall = $readRainfall->sel();
        $data = array();

        //本月与本年累计雨量
//        $query = "SELECT TOP 1 YYL,NYL FROM WATER";
//        $accumulativeRFList =  $readRainfall->query(sprintf($query));
//        $yyl = round(floatval($accumulativeRFList["YYL"]));
//        $nyl = round(floatval($accumulativeRFList["NYL"]));
//          $yyl = round(floatval(5.0));
//          $nyl = round(floatval(150));


        $data['YYL'] =  round($accumRainfall['YYL'],2);
        $data['NYL'] =  round($accumRainfall['NYL'],2);

        return $data;
    }
    /**
     * 获取最新的泵站信息
     */
    public function getNewBZInfo(){

        $readztcs = new readztcs();
        $bzList = $readztcs->selAllBzName();
        $ztcs_list = array();

        foreach ($bzList as $item){
            $newItem = array();

            $topItem = $readztcs->selByBzName($item['ZM_ID']);

            $newItem['ZM_ID'] = $topItem['ZM_ID'];
            $newItem['DT'] = strtotime($topItem['DT']) ;
            $newItem['ZM_KD'] =  round(floatval($topItem['ZM_KD']),2);
            $newItem['ZM_LL'] = round(floatval($topItem['ZM_LL']),2);

            $ztcs_list[] = $newItem;
        }

        return $ztcs_list;
    }

    /**
     * 上传文件并发送通知
     */
    public function upload_image() {

        $post_array = array();//接收表单提交的数据
        $toparty = "";//部门id拼接变量
        $data = array();//最终发送到微信端的参数
        $media_id = "";//文件上传到微信返回的id值
        $saveList = array();//保存数据到数据库的数组
        $inform = new inform();
        //接收表单提交内容
        if(!empty($_POST)){
            $post_array = $_POST;//获取表单提交的数据
            $saveList = $post_array;
//            print_r($post_array);
        }

        //接收文件
        if(!empty(request()->file())){
            $file = request()->file('file_stu');// 获取表单上传文件
//            print_r($file);
            $save_path = config('uploadPath');//获取上传路径;
            $save_files = $save_path . date("Ymd") . "\\".$post_array['type']."\\";//这个是以年月日新建的文件夹

            if (!is_dir($save_files)) @mkdir($save_files, 0777, true); //先检查当前文件夹是否存在，如不存在，创建文件夹

            $info = $file->move($save_files);// 移动到$save_files指定的目录下
            $saveList['inform_save_path'] = $save_files;
            if($info) {
                //获取上传表格的数据
                $file_name = $info->getPathname();    //获取上传文件的地址名称
                $file_name = str_replace('E:\\','..\\..\\',$file_name);

                $post_data = array(
                    "media" => new \CURLFile($file_name)
                );
                $type = $post_array['type'];//获取上传类型
                if($post_array['type'] == 'mpnews'){
                    $type = 'image';
                }
                $result =  $this->weiXinAdvanced->upload_Material($type,$post_data);//上传文件
//                print_r($result);
                $result = json_decode($result,true);//取得返回值
                if($result['media_id']){
                    $media_id = $result['media_id'];
                    $saveList['inform_mediaId'] = $media_id;
                }
            }

        }

        $dept = json_decode($_GET['dept']);//获取部门id数组
//        print_r($dept);
        //拼接部门id
        foreach($dept as $item => $value){
            $toparty = $toparty.$value."|";
        }
        $data['toparty'] = substr($toparty,0,strlen($toparty)-1);
        $saveList['inform_dept'] = substr($toparty,0,strlen($toparty)-1);
        $data['msgtype'] = $post_array['type'];
        $data['agentid'] = config('Agentld');
//
//        $json =
//            '{
//                "articles": [{
//                    "title":"标题",
//                    "thumb_media_id":"THUMB_MEDIA_ID",
//                    "author":"作者",
//                    "digest":"图文消息的摘要",
//                    "show_cover_pic": "1",
//                    "content":"图文消息的具体内容",
//                    "content_source_url": "图文消息的原文地址"
//                     }]
//             }';
        //拼接data参数
        if($post_array['type']){
            switch($post_array['type']){
                case "text":
                    $data['text']['content'] = $post_array['text'];
                    break;
                case "image":

                    $data['image']['media_id'] = $media_id;
                    break;
                case "file":

                    $data['file']['media_id'] = $media_id;
                    break;
                case "mpnews":

                    $data['mpnews']['articles'] = array(
                        array(
                            'title' => $post_array['title'],
                            'thumb_media_id' => $media_id,
                            'author' => $post_array['author'],
                            'content_source_url' => $post_array['url'],
                            'content' => $post_array['content'],
                            'digest' => $post_array['digest']
                        )
                    );
                    break;
                default:
                    echo '<script>alert("上传类型错误！");window.location.href= "https://open.weixin.qq.com/connect/oauth2/authorize?appid='.$this->appID.'&redirect_uri='.$this->root.'/public/index.php/Home/index/UploadMaterial&response_type=code&scope=snsapi_userinfo&agentid='.$this->Agentld.'&state=1#wechat_redirect";</script>';
                    break;
            }
        }
        $result_save = $inform->data($saveList)->save();
        $result = "";
        if($result_save > 0){
            $result = $this->weiXinAdvanced->send_custom_image($data);//发送通知
        }
        $result = json_decode($result,true);
        if("ok" == $result['errmsg']){
            echo '<script>alert("发送成功！");window.location.href= "https://open.weixin.qq.com/connect/oauth2/authorize?appid='.$this->appID.'&redirect_uri='.$this->root.'/public/index.php/Home/index/UploadMaterial&response_type=code&scope=snsapi_userinfo&agentid='.$this->Agentld.'&state=1#wechat_redirect";</script>';
        }else{
            echo '<script>alert("发送失败！");window.location.href= "https://open.weixin.qq.com/connect/oauth2/authorize?appid='.$this->appID.'&redirect_uri='.$this->root.'/public/index.php/Home/index/UploadMaterial&response_type=code&scope=snsapi_userinfo&agentid='.$this->Agentld.'&state=1#wechat_redirect";</script>';
        }
    }

    /**
     * 定时发送警告消息
     */
    public function timingSendWaring(){
        $index = new \app\Home\controller\Index();
        $list = $index->getBZData();
        $this->sendWarning($list);

    }


    /**
     * 调换机组状态
     * @param 需要反转的值
     */
    public function reversal_unit($value){
        if($value == 1){
            return "0";
        }else if($value == 0){
            return "1";
        }
        return $value;
    }

    /**
     * 拼接SQL语句，根据泵站名称查询数据
     * @param $bz_name 泵站名称
     */
    public function jointSQL($bz_name){
        $query = '';
        $bz_type = 0;
        switch($bz_name){
            case '丰收泵站':
                $query = "SELECT r.FSGYAI3_VAL0 as NJSW,r.FSGYAI4_VAL0 AS WJSW,r.timestamp FROM readwater r where r.timestamp>='%s' and  r.timestamp<='%s' order by r.timestamp asc";
                $bz_type = 0;
                break;
            default:
                echo "<script>alert('参数错误！');window.location.href='".$this->root."/public/index.php/Home/index/chart?bz_name=丰收泵站';</script>";
                break;
        }

        $result = array(
            'query' => $query,
            'bz_type' => $bz_type
        );
        return $result;
    }
    //登录判断
    public function loginCheck()
    {
        $username = $_POST['username'];
        $password = $_POST['password'];

        $data = array();
        $user = new user();
        $result = $user->selByUserName($username);

        if($result['password'] == $password){
            $data["success"] = true;
        } else {
            $data["success"] = false;
        }
        return json($data);
    }

    public  function getReserviorWater(){

        $readWater = new readwater();
        $data = array();

        $query = "SELECT (DATENAME(MONTH,DT)+'-'+ DATENAME(DAY,DT)) as TM,AVG(SW) AS RZ,AVG(KR) AS W FROM WATER WHERE DATEDIFF(DD,DT,GETDATE())<=30 
                    GROUP BY DATENAME(MONTH,DT),DATENAME(DAY,DT) order by cast(DATENAME(DAY,DT) as  int) asc";

        $waterList = $readWater->query(sprintf($query));
        foreach ($waterList as $item) {
            $newItem = array();
            $newItem["TIME"] = $item["TM"];
            $newItem["SW"] = round(floatval($item['RZ']),2);
            $newItem["KR"] = round(floatval($item['W']),2);
            $data[] = $newItem;
        }

        return json_encode($data);
    }

    public function getDamSaturationLine(){

        $surface =  $_GET['surface'];
        $surface = (int)$surface;
//        $readDam = new ReserviorDamModel();
        //大坝绘制的数据，从配置文件读取？
        //浸润线的数据，从数据库浸润线表读取三个断面的，最新测量值
        //水位数据，从数据库水位表读取，最新测量值
        //组合成array返回给ajax

        $readWater = new readwater();
        $waterLevel = $readWater->sel();
        //以下要修改测压管数据
        $damData = array();
        $surfaceData = array();

        $readDamData = new ReserviorDamModel();
        $piezometer = $readDamData->sel();

        if ($surface == 1){
            $surfaceData['name'] = '断面1';
            $surfaceData['waterlevel'] = round($waterLevel['SW'],2);
            $surfaceData['pipe1_pressure'] = round($piezometer['C12'],2);
            $surfaceData['pipe2_pressure'] = round($piezometer['C11'],2);
            $surfaceData['pipe3_pressure'] = round($piezometer['C10'],2);
            $surfaceData['pipe4_pressure'] = round($piezometer['C9'],2);

        }
        elseif ($surface == 2){
            $surfaceData['name'] = '断面2';
            $surfaceData['waterlevel'] = round($waterLevel['SW'],2);
            $surfaceData['pipe1_pressure'] = round($piezometer['C8'],2);
            $surfaceData['pipe2_pressure'] = round($piezometer['C7'],2);
            $surfaceData['pipe3_pressure'] = round($piezometer['C6'],2);
            $surfaceData['pipe4_pressure'] = round($piezometer['C5'],2);
        }
        else{
            $surfaceData['name'] = '断面3';
            $surfaceData['waterlevel'] = round($waterLevel['SW'],2);
            $surfaceData['pipe1_pressure'] = round($piezometer['C4'],2);
            $surfaceData['pipe2_pressure'] = round($piezometer['C3'],2);
            $surfaceData['pipe3_pressure'] = round($piezometer['C2'],2);
            $surfaceData['pipe4_pressure'] = round($piezometer['C1'],2);
        }
        $damData[] = $surfaceData;
        return json_encode($damData,JSON_UNESCAPED_UNICODE);
    }
}
